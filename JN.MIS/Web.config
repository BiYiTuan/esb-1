<?xml version="1.0"?>
<configuration>
    <configSections>
        <section name="ExtAspNet" type="ExtAspNet.ConfigSection, ExtAspNet" requirePermission="false"/>
    </configSections>
    <ExtAspNet Language="zh_cn" AjaxTimeout="60" IconBasePath="~/Images/icon"/>
    <appSettings>
        <!--缓存有效期。
        -2	关闭缓存；
        -1	非独占数据库，有外部系统操作数据库，使用请求级缓存；
         0	永久静态缓存；
        >0	静态缓存时间，单位是秒；
        默认-1。-->
        <add key="XCode.Cache.Expiration" value="600"/>
        <!--是否启用全局调试。默认为不启用-->
        <add key="NewLife.Debug" value="true"/>
        <!--是否启用调试，默认不启用。输出所有执行的SQL语句-->
        <add key="XCode.Debug" value="true"/>
        <!--是否启用数据架构，默认不启用。数据架构可以实现通过实体类反向更新数据库结构，不启用时，仅把更新SQL写入日志，如果留空则不做检查-->
        <add key="XCode.Schema.Enable" value="true"/>
        <!--是否启用不删除字段，默认不启用。删除字段的操作过于危险，这里可以通过设为true关闭-->
        <add key="XCode.Schema.NoDelete" value="false"/>
        <!--要排除的链接名，多个用逗号分隔，默认空。-->
        <add key="XCode.Schema.Exclude" value=""/>
        <!--连接名映射，把实体类中的Test2和Test3连接名映射到Test去-->
        <!--<add key="XCode.ConnMaps" value="Common#Common_MSSQL"/>-->

        <!-- XControl相关服务端控件的调试开关 -->
        <add key="XControl.Debug" value="true"/>

        <!--IO配置-->
        <!--数据流处理器，Xxx是总线名称，多个处理器用竖线|隔开，前面的处理器比后面的先处理。-->
        <add key="NewLife.StreamHandler_Xxx" value=""/>
        <add key="NewLife.StreamHandler_Message" value="NewLife.Messaging.MessageStreamHandler, NewLife.Core"/>

        <!--选中项背景颜色-->
        <add key="XControl.GridViewExtender.SelectedRowBackColor" value="Pink"/>
        <add key="XControl.LinkBoxField.ClickedRowBackColor" value="DodgerBlue"/>

        <!--通用实体库配置-->
        <!--是否写实体日志，默认启用。对管理员、角色、菜单等实体操作时向日志表写操作日志-->
        <add key="NewLife.CommonEntity.WriteEntityLog" value="true"/>
        <!--应用目录，初始化菜单时将扫描这些目录，多个目录用逗号或者分号隔开-->
        <add key="NewLife.CommonEntity.AppDirs" value="Admin,MacDoc,Template"/>
        <add key="NewLife.CommonEntity.AppDirsFileFilter" value="Default.aspx,Login.aspx,Main.aspx"/>
        <add key="NewLife.CommonEntity.AppDirsIsAllDirs" value="false"/>
        <!--是否压缩ViewState-->
        <add key="NewLife.CommonEntity.CompressViewState" value="true"/>

        <!--Web配置-->
        <!--CompressionModule模版压缩的文件，逗号隔开-->
        <add key="NewLife.CommonEntity.CompressFiles" value=".axd,.js,.css"/>

    </appSettings>
    <connectionStrings>
        <add name="Common" connectionString="Data Source=10.30.1.4;Initial Catalog=JNMIS;Integrated Security=False;User ID=oa;Password=123456;Application Name=JNMIS" providerName="System.Data.SqlClient"/>
        <add name="Common-bak" connectionString="Data Source=~\App_Data\Common.db;Version=3" providerName="Sqlite"/>
    </connectionStrings>
    <system.web>
        <httpHandlers>
            <add verb="GET" path="res.axd" type="ExtAspNet.ResourceHandler, ExtAspNet"/>
            <!--<add verb="GET,POST" path="Message.ashx" type="NewLife.Messaging.HttpMessageProviderHandler, NewLife.Core"/>-->
        </httpHandlers>
        <httpModules>
            <!--压缩模块，用于压缩aspx页面，axd资源，css和js等-->
            <add name="CompressionModule" type="NewLife.Web.CompressionModule,NewLife.Core"/>
            <!--页面执行时间模块，用于在页面中输出页面执行时间和查询执行次数-->
            <!--<add name="DbRunTimeModule" type="XCode.Web.DbRunTimeModule,XCode"/>-->

            <!--ExtAspNet脚本模块，用于提供ExtAspNet需要的js,css文件-->
            <add name="ExtAspNetScriptModule" type="ExtAspNet.ScriptModule, ExtAspNet"/>
            <!--无效URL处理模块，用于处理带#的URL链接, 避免404错误-->
            <add name="BadUrlFixModule" type="NewLife.CommonEntity.Web.BadUrlFixModule, NewLife.CommonEntity" />
        </httpModules>
        <pages>
            <controls>
                <add assembly="ExtAspNet" namespace="ExtAspNet" tagPrefix="ext"/>
            </controls>
        </pages>
        <compilation debug="true">

        </compilation>
        <!--
            The <authentication> section enables configuration 
            of the security authentication mode used by 
            ASP.NET to identify an incoming user. 
        -->
        <authentication mode="Windows" />
        <!--
            The <customErrors> section enables configuration 
            of what to do if/when an unhandled error occurs 
            during the execution of a request. Specifically, 
            it enables developers to configure html error pages 
            to be displayed in place of a error stack trace.

        <customErrors mode="RemoteOnly" defaultRedirect="GenericErrorPage.htm">
            <error statusCode="403" redirect="NoAccess.htm" />
            <error statusCode="404" redirect="FileNotFound.htm" />
        </customErrors>
        -->

    </system.web>

</configuration>
